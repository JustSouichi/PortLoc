name: ðŸ“¦ Build PortLoc

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Build renderer (Vite)
        run: npm run build:renderer

      - name: Package with Electron Builder
        run: |
          if [ "${{ matrix.os }}" = "macos-latest" ]; then
            # build macOS arm64 senza firma
            npm run build:renderer && npx electron-builder --mac --arm64 --config.mac.identity=null
          else
            npm run build
          fi
        env:
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}

      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: PortLoc-${{ matrix.os }}
          path: dist/**/*
